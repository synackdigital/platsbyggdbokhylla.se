{
  "author": {
    "name": "Anatoliy Chakkaev",
    "email": "rpm1602@gmail.com"
  },
  "name": "railway-passport",
  "description": "PassportJS integrated with Railway",
  "version": "0.0.4",
  "repository": {
    "type": "git",
    "url": "git@github.com:1602/Railway-passport.git"
  },
  "main": "lib/passport.js",
  "engines": {
    "node": ">= 0.6.x"
  },
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "## About\n\nPassportJS auth library integrated into RailwayJS. Why this package needed? To be honest, PassportJS is dead-simple in integrating. But it can be simplier. This package for authentication without extra coding, just configure it and use\n\n## Setup project\n\n### 1. config/environment.js:\n\n```javascript\nvar rwps = require('railway-passport');\n\napp.configure(function () {\n    // some common stuff (methodOverride, cookie and body parser, session)\n\n    // init passport\n    rwps.init();\n    // hook up user model\n    process.nextTick(function () {\n        rwps.loadUser(User);\n    });\n    app.use(app.router);\n});\n```\n\nPlease not that order of middlewares is important! `rwps.init();` should go right before app.router middleware.\n\n### 2. config/passport.yml\n\n```yaml\ndevelopment:\n  baseURL: 'http://localhost:3000/'\n  google: yes\n  github:\n    clientID: \"a8578b8dc47834908338\"\n    secret: \"d8107d7cd75fc8ee1f12cf1f38b3aa065c3ec2ac\"\n  linkedin:\n    apiKey: \"3s708f1uys4x\"\n    secret: \"p3iBqlybJ5WNTINv\"\nproduction:\n  baseURL: 'http://node-js.ru/'\n  github:\n    clientID: \"....\"\n    secret: \"....\"\n```\n\n## Use\n\nAll authentication routes starts with `/auth/PROVIDERNAME`\nJust visit `/auth/google` to sign in with google:\n\n    <% link_to('Sign in with google', '/auth/google') %>\n    <% link_to('Sign in with linkedin', '/auth/linkedin') %>\n    <% link_to('Sign in with github', '/auth/github') %>\n\nCallback urls:\n\n- github: `/auth/github/callback`\n- linkedin: `/auth/linkedin/callback`\n\nExample before filter (describe in your application controller):\n\n```javascript\nbefore(function requireManager() {\n    if (!session.passport.user) {\n        req.session.redirect = req.path;\n        redirect('/auth/linkedin');\n    } else {\n        User.find(session.passport.user, function (err, user) {\n            if (user && user.email === 'my.email@somehost.tld') {\n                req.user = user;\n                next();\n            } else {\n                flash('error', 'You have no permission to access this area');\n                redirect('/');\n            }\n        });\n    }\n});\n```\n",
  "_id": "railway-passport@0.0.4",
  "_from": "railway-passport"
}
